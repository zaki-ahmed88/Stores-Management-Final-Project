package model.EntityObjects;

import java.math.BigDecimal;

import model.DMLOperations;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 15 13:02:32 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SupPhonesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SupPhonesId {
            public Object get(SupPhonesEOImpl obj) {
                return obj.getSupPhonesId();
            }

            public void put(SupPhonesEOImpl obj, Object value) {
                obj.setSupPhonesId((BigDecimal)value);
            }
        }
        ,
        SupPhones {
            public Object get(SupPhonesEOImpl obj) {
                return obj.getSupPhones();
            }

            public void put(SupPhonesEOImpl obj, Object value) {
                obj.setSupPhones((String)value);
            }
        }
        ,
        SupId {
            public Object get(SupPhonesEOImpl obj) {
                return obj.getSupId();
            }

            public void put(SupPhonesEOImpl obj, Object value) {
                obj.setSupId((BigDecimal)value);
            }
        }
        ,
        Sup {
            public Object get(SupPhonesEOImpl obj) {
                return obj.getSup();
            }

            public void put(SupPhonesEOImpl obj, Object value) {
                obj.setSup((SupEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SupPhonesEOImpl object);

        public abstract void put(SupPhonesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SUPPHONESID = AttributesEnum.SupPhonesId.index();
    public static final int SUPPHONES = AttributesEnum.SupPhones.index();
    public static final int SUPID = AttributesEnum.SupId.index();
    public static final int SUP = AttributesEnum.Sup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SupPhonesEOImpl() {
    }

    /**
     * Gets the attribute value for SupPhonesId, using the alias name SupPhonesId.
     * @return the value of SupPhonesId
     */
    public BigDecimal getSupPhonesId() {
        return (BigDecimal)getAttributeInternal(SUPPHONESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupPhonesId.
     * @param value value to set the SupPhonesId
     */
    public void setSupPhonesId(BigDecimal value) {
        setAttributeInternal(SUPPHONESID, value);
    }

    /**
     * Gets the attribute value for SupPhones, using the alias name SupPhones.
     * @return the value of SupPhones
     */
    public String getSupPhones() {
        return (String)getAttributeInternal(SUPPHONES);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupPhones.
     * @param value value to set the SupPhones
     */
    public void setSupPhones(String value) {
        setAttributeInternal(SUPPHONES, value);
    }

    /**
     * Gets the attribute value for SupId, using the alias name SupId.
     * @return the value of SupId
     */
    public BigDecimal getSupId() {
        return (BigDecimal)getAttributeInternal(SUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupId.
     * @param value value to set the SupId
     */
    public void setSupId(BigDecimal value) {
        setAttributeInternal(SUPID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity SupEOImpl.
     */
    public SupEOImpl getSup() {
        return (SupEOImpl)getAttributeInternal(SUP);
    }

    /**
     * Sets <code>value</code> as the associated entity SupEOImpl.
     */
    public void setSup(SupEOImpl value) {
        setAttributeInternal(SUP, value);
    }

    /**
     * @param supPhonesId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal supPhonesId) {
        return new Key(new Object[]{supPhonesId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EntityObjects.SupPhonesEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        DMLOperations dml = new DMLOperations();
        int newId = dml.setNewId(getDBTransaction(), "SUP_PHONES_ID", "SUP_PHONES");
        setSupPhonesId(new BigDecimal(newId));
    }
}
