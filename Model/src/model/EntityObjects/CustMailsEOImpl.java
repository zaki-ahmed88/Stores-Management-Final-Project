package model.EntityObjects;

import java.math.BigDecimal;

import model.DMLOperations;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 15 12:43:14 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustMailsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CustMailsId {
            public Object get(CustMailsEOImpl obj) {
                return obj.getCustMailsId();
            }

            public void put(CustMailsEOImpl obj, Object value) {
                obj.setCustMailsId((BigDecimal)value);
            }
        }
        ,
        CustMail {
            public Object get(CustMailsEOImpl obj) {
                return obj.getCustMail();
            }

            public void put(CustMailsEOImpl obj, Object value) {
                obj.setCustMail((String)value);
            }
        }
        ,
        CustId {
            public Object get(CustMailsEOImpl obj) {
                return obj.getCustId();
            }

            public void put(CustMailsEOImpl obj, Object value) {
                obj.setCustId((BigDecimal)value);
            }
        }
        ,
        Cust {
            public Object get(CustMailsEOImpl obj) {
                return obj.getCust();
            }

            public void put(CustMailsEOImpl obj, Object value) {
                obj.setCust((CustEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CustMailsEOImpl object);

        public abstract void put(CustMailsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CUSTMAILSID = AttributesEnum.CustMailsId.index();
    public static final int CUSTMAIL = AttributesEnum.CustMail.index();
    public static final int CUSTID = AttributesEnum.CustId.index();
    public static final int CUST = AttributesEnum.Cust.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustMailsEOImpl() {
    }

    /**
     * Gets the attribute value for CustMailsId, using the alias name CustMailsId.
     * @return the value of CustMailsId
     */
    public BigDecimal getCustMailsId() {
        return (BigDecimal)getAttributeInternal(CUSTMAILSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustMailsId.
     * @param value value to set the CustMailsId
     */
    public void setCustMailsId(BigDecimal value) {
        setAttributeInternal(CUSTMAILSID, value);
    }

    /**
     * Gets the attribute value for CustMail, using the alias name CustMail.
     * @return the value of CustMail
     */
    public String getCustMail() {
        return (String)getAttributeInternal(CUSTMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustMail.
     * @param value value to set the CustMail
     */
    public void setCustMail(String value) {
        setAttributeInternal(CUSTMAIL, value);
    }

    /**
     * Gets the attribute value for CustId, using the alias name CustId.
     * @return the value of CustId
     */
    public BigDecimal getCustId() {
        return (BigDecimal)getAttributeInternal(CUSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustId.
     * @param value value to set the CustId
     */
    public void setCustId(BigDecimal value) {
        setAttributeInternal(CUSTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity CustEOImpl.
     */
    public CustEOImpl getCust() {
        return (CustEOImpl)getAttributeInternal(CUST);
    }

    /**
     * Sets <code>value</code> as the associated entity CustEOImpl.
     */
    public void setCust(CustEOImpl value) {
        setAttributeInternal(CUST, value);
    }

    /**
     * @param custMailsId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal custMailsId) {
        return new Key(new Object[]{custMailsId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EntityObjects.CustMailsEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        DMLOperations dml = new DMLOperations();
        int newId = dml.setNewId(getDBTransaction(), "CUST_MAILS_ID", "CUST_MAILS");
        setCustMailsId(new BigDecimal(newId));
        
    }
}
